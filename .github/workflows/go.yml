# This workflow will build a golang project and create multi-platform Docker containers

name: Build a Golang Project and Create Multi-Platform Docker Containers

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: '1.23'

            - name: Build Linux ARM64
              env:
                  GOOS: linux
                  GOARCH: arm64
              run: go build -v -o moneytrack-linux-arm64

            - name: Build Linux AMD64
              env:
                  GOOS: linux
                  GOARCH: amd64
              run: go build -v -o moneytrack-linux-amd64

            - name: Upload binary artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: go-binaries
                  path: |
                      moneytrack-linux-arm64
                      moneytrack-linux-amd64

    docker:
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/arm64,linux/amd64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
